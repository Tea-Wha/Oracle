-- 제약 조건(Constraints) -> 데이터의 무결성(Integrity)을 보장하기 위해 테이블에 설정되는 규칙
-- 제약 조건을 통해 데이터가 정확하고 일관되게 유지되며, 잘못된 데이터 입력을 방지할 수 있음
-- NOT NULL / UNIQUE / PRIMARY KEY / FOREIGN KEY / CHECK

-- NOT NULL : 지정한 열에 값이 있어야 함
-- UNIQUE : 값이 유일해야 함, 단 null 허용
-- PRIMARY KEY(PK) : 유일해야하고 null 이면 안됨
-- FOREIGN KEY(FK) : 다른 테이블의 열을 참조하여 존재하는 값만 입력 할 수 있음
-- 넣는 이유? JOIN 할 때 필수 KEY가 아님 
-- DEPT -> DEPTNO <- EMP (제약조건이 있으면 / 참조하고 있는 개체가 있다면 (선행하여 지우지 않는다면) 지우는 것이 불가능)
-- 입력할 때도 제약조건에 대한 값이 없다면 입력이 불가능해진다 -> 결과적으로 데이터의 무결성을 위한 것이다. -> 불편해진다.
-- 부서 테이블 먼저 만들고 사원 입력  
-- CHECK : 설정한 조건식을 만족하는 데이터만 입력 가능
CREATE TABLE TABLE_NOTNULL (
	LOGIN_ID VARCHAR2(20) NOT NULL,
	LOGIN_PWD VARCHAR2(20) NOT NULL,
	TEL VARCHAR2(20)
);

SELECT * FROM TABLE_NOTNULL;

INSERT INTO TABLE_NOTNULL (LOGIN_ID, LOGIN_PWD, TEL) VALUES('htw7880', 'sda789', '010-1234-5678');

UPDATE TABLE_NOTNULL 
	SET LOGIN_PWD = 'test1234124' 
WHERE LOGIN_ID = 'htw7880';

-- 이미 만들어진 테이블에 제약 조건 지정하기
ALTER TABLE TABLE_NOTNULL
	MODIFY TEL NOT NULL;
	
UPDATE TABLE_NOTNULL 
	SET TEL = NULL 
WHERE LOGIN_ID = 'htw7880';	

-- UNIQUE 제약 조건 : 중복 허용하지 않는 특성
CREATE TABLE TABLE_UNIQUE (
	LOGIN_ID VARCHAR2(20) UNIQUE,
	LOGIN_PWD VARCHAR2(20) NOT NULL,
	TEL VARCHAR2(20)
);

SELECT * FROM TABLE_UNIQUE;

INSERT INTO TABLE_UNIQUE (LOGIN_ID, LOGIN_PWD, TEL) VALUES ('안유진', 'pwd12345', '010-1234-5678');

INSERT INTO TABLE_UNIQUE (LOGIN_ID, LOGIN_PWD, TEL) VALUES ('장원영', 'pwd34567', '010-4567-5678');

INSERT INTO TABLE_UNIQUE (LOGIN_ID, LOGIN_PWD, TEL) VALUES (NULL, 'pwd3333', '010-3333-5678');

UPDATE TABLE_UNIQUE
	SET LOGIN_ID = 'gds'
WHERE LOGIN_PWD = 'pwd3333';		

ALTER TABLE TABLE_UNIQUE
	MODIFY LOGIN_ID NOT NULL;

-- 유일하게 하나만 있는 값 (Primary Key) : UNIQUE, NOT NULL 제약 조건을 모두 가짐
-- PK로 지정하면 자동으로 인덱스가 만들어짐 (PK를 통한 검색 속도 향상)

CREATE TABLE TABLE_PK (
	LOGIN_ID VARCHAR2(20) PRIMARY KEY,
	LOGIN_PWD VARCHAR2(20) NOT NULL,
	TEL VARCHAR2(20)
);
INSERT INTO TABLE_PK VALUES('안유진', 'pwd12345', '010-1234-5678');
INSERT INTO TABLE_PK VALUES('장원영', 'pwd12345', '010-1234-5678');
INSERT INTO TABLE_PK VALUES('이서', 'pwd12345', '010-1234-5678');

SELECT * FROM TABLE_PK;


CREATE TABLE TABLE_TEST (
	LOGIN_ID VARCHAR2(20) UNIQUE NOT NULL,
	LOGIN_PWD VARCHAR2(20) NOT NULL,
	TEL VARCHAR2(20)
);

SELECT * FROM TABLE_TEST;

INSERT INTO TABLE_TEST VALUES('안유진', 'pwd12345', '010-1234-5678');
INSERT INTO TABLE_TEST VALUES('안유진', 'pwd12345', '010-1234-5678');

-- 다른 테이블과 관계를 맺는 FOREIGN KEY
-- 서로 다른 테이블간 관계를 정의하는 데 사용하는 제약 조건
-- 참조하고 있는 기본키의 데이터타입과 일치해야 하며, 외래키가 참조되고 있는 기본키는 삭제 불가
CREATE TABLE DEPT_FK (
	DEPTNO NUMBER(2) PRIMARY KEY,
	DNAME VARCHAR2(14),
	LOC VARCHAR2(13)
);
SELECT * FROM DEPT_FK;

INSERT INTO DEPT_FK VALUES (10, '아이돌팀', 'SEOUL');

CREATE TABLE EMP_FK (
	EMPNO NUMBER(4) PRIMARY KEY,
	ENAME VARCHAR2(10),
	JOB VARCHAR2(9),
	MGR NUMBER(4),
	HIREDATE DATE,
	SAL NUMBER(7,2),
	COMM NUMBER(7,2),
	DEPTNO NUMBER(2) REFERENCES DEPT_FK (DEPTNO)
);
SELECT * FROM EMP_FK;
-- 외래키 사용하려면 참조하려는 테이블의 PRIMARY KEY 값이 이미 존재하고 있어야만 한다.
-- JOIN에서 문제가 되기보다는 제약조건에서 걸린다
INSERT INTO EMP_FK VALUES (2001, '안유진', 'IVE', 1001, '2024/09/01', 9000, 1000, 10);
ROLLBACK;

DELETE FROM EMP_FK
WHERE DEPTNO = 10;

DELETE FROM DEPT_FK
WHERE DEPTNO = 10;

SELECT EMPNO, e.DEPTNO, DNAME, LOC FROM EMP_FK e JOIN DEPT_FK d
ON e.DEPTNO =d.DEPTNO;

-- 데이터 형태와 범위를 정하는 CHECK
-- ID 및 PWD 등의 길이제한
-- 유효 범위값 확인 등에 사용
CREATE TABLE TABLE_CHECK(
	LOGIN_ID VARCHAR2(20) PRIMARY KEY,
	LOGIN_PWD VARCHAR2(20) CHECK(LENGTH(LOGIN_PWD) > 6),
	TEL VARCHAR2(20)
);

INSERT INTO TABLE_CHECK VALUES ('안유진', 'pwd1234', '010-1234-5678');
SELECT * FROM TABLE_CHECK;

-- 기본값을 정하는 DEFAULT : 특정열에 저장할 값을 지정하지 않는 경우 기본값을 지정
CREATE TABLE TABLE_DEFAULT(
	LOGIN_ID VARCHAR2(20) PRIMARY KEY,
	LOGIN_PWD VARCHAR2(20) DEFAULT '1234567',
	TEL VARCHAR2(20)
);

INSERT INTO TABLE_DEFAULT VALUES ('민지', NULL, '010-1234-5678');

SELECT * FROM TABLE_DEFAULT;

INSERT INTO TABLE_DEFAULT (LOGIN_ID, TEL) VALUES ('하니', '010-2345-6789' );

INSERT INTO TABLE_DEFAULT DEFAULT VALUES ('해린', '', '010-3456-7899');